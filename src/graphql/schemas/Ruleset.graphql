type Ruleset {
    id: ID!
    name: String!
    rounds: Int!
    winnerpoints: Int!
    loserpoints: Int!
    drawpoints: Int!
    nightmarepoints: Int!
    nightmarePointsOn: Boolean!
}

input RulesetInput {
    name: String!
    rounds: Int!
    winnerpoints: Int!
    loserpoints: Int!
    drawpoints: Int!
    nightmarepoints: Int!
    nightmarePointsOn: Boolean!
}

input UpdateRulesetInput {
    id: ID!
    name: String
    rounds: Int
    winnerpoints: Int
    loserpoints: Int
    drawpoints: Int
    nightmarepoints: Int
    nightmarePointsOn: Boolean
}

type Query {
    # Ruleset Queries
    ruleset(id: ID!): Ruleset
    allRulesets(limit: Int, offset: Int): [Ruleset]
}

type Mutation {
    # Ruleset Mutations
    createRuleset(input: RulesetInput!): Ruleset!
    updateRuleset(input: UpdateRulesetInput!): Ruleset
    deleteRuleset(id: ID!): Boolean
}