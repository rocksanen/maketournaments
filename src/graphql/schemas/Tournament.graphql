type Tournament {
    id: ID!
    name: String!
    description: String
    ruleset: [Ruleset!]!
    date: String!
    players: [User]
    admin: [User!]!
    matches: [Match!]
    maxPlayers: Int
    invitationOnly: Boolean
}

input CreateTournamentInput {
    name: String!
    ruleset: [ID!]!
    date: String!
    players: [ID!]
    admin: [ID!]!
    maxPlayers: Int
    invitationOnly: Boolean
}

input UpdateTournamentInput {
    id: ID!
    name: String
    ruleset: [ID!]
    date: String
    players: [ID!]
    admin: [ID!]
    matches: [ID!]
}

type Query {
    # Tournament Queries
    tournament(id: ID!): Tournament
    allTournaments(limit: Int, offset: Int): [Tournament]
    tournamentByName(name: String!): Tournament
    tournamentsByUser(userId: ID!): [Tournament]
    tournamentsByNameAndUser(name: String!, userId: ID!): Tournament
    getTournamentsByIds(ids: [ID!]!): [Tournament]
}

type Mutation {
    # Tournament Mutations
    createTournament(input: CreateTournamentInput!): Tournament!
    updateTournament(input: UpdateTournamentInput!): Tournament
    deleteTournament(id: ID!): Boolean
    updateTournamentPlayers(tournamentId: ID!, playerId: ID!): Tournament
}
